@startumlhide empty membersskinparam class {  BackgroundColor white  ArrowColor black  BorderColor darkGray}class Inheritance <<(C,white)>> #CCFFFF {}class EnumValue <<(C,white)>> #CCFFFF {}class Implementation <<(C,white)>> #CCFFFF {}class implicitVariable <<(C,white)>> #CCFFFF {}class ParametricMethod <<(C,white)>> #CCFFFF {}class Namespace <<(C,white)>> #CCFFFF {}class ScriptEntity <<(C,white)>> #CCFFFF {}class Reference <<(C,white)>> #CCFFFF {}class Module <<(C,white)>> #CCFFFF {}class Type <<(C,white)>> #CCFFFF {}class Variable <<(C,white)>> #CCFFFF {}class Entity <<(C,white)>> #CCFFFF {}class FamixTypeScriptModel <<(C,white)>> #CCFFFF {}class StructuralEntity <<(C,white)>> #CCFFFF {}class ContainerEntity <<(C,white)>> #CCFFFF {}class Enum <<(C,white)>> #CCFFFF {}class File <<(C,white)>> #CCFFFF {}class SourceAnchor <<(C,white)>> #CCFFFF {}class ParameterType <<(C,white)>> #CCFFFF {}class IndexedFileAnchor <<(C,white)>> #CCFFFF {}class BehaviouralEntity <<(C,white)>> #CCFFFF {}class ParametricClass <<(C,white)>> #CCFFFF {}class TClassMetrics <<(T,white)>> #CCFFFF {}class ParametricArrowFunction <<(C,white)>> #CCFFFF {}class Interface <<(C,white)>> #CCFFFF {}class SourceLanguage <<(C,white)>> #CCFFFF {}class Invocation <<(C,white)>> #CCFFFF {}class PrimitiveType <<(C,white)>> #CCFFFF {}class Access <<(C,white)>> #CCFFFF {}class Decorator <<(C,white)>> #CCFFFF {  String expression}class SourcedEntity <<(C,white)>> #CCFFFF {}class Folder <<(C,white)>> #CCFFFF {}class Function <<(C,white)>> #CCFFFF {}class Class <<(C,white)>> #CCFFFF {}class TEntityCreator <<(T,white)>> #CCFFFF {}class NamedEntity <<(C,white)>> #CCFFFF {}class ParametricInterface <<(C,white)>> #CCFFFF {}class ImportClause <<(C,white)>> #CCFFFF {}class SourceTextAnchor <<(C,white)>> #CCFFFF {}class Accessor <<(C,white)>> #CCFFFF {}class Alias <<(C,white)>> #CCFFFF {}class Concretization <<(C,white)>> #CCFFFF {}class Method <<(C,white)>> #CCFFFF {}class TWithInterfaces <<(T,white)>> #CCFFFF {}class Comment <<(C,white)>> #CCFFFF {  Boolean isJSDoc}class ParameterConcretization <<(C,white)>> #CCFFFF {}class Parameter <<(C,white)>> #CCFFFF {}class Property <<(C,white)>> #CCFFFF {  Boolean isOptional  Boolean readOnly  Boolean isDefinitelyAssigned  Boolean isJavaScriptPrivate}class ArrowFunction <<(C,white)>> #CCFFFF {}class ParametricFunction <<(C,white)>> #CCFFFF {}class JSDoc <<(C,white)>> #CCFFFF {}class ScopingEntity <<(C,white)>> #CCFFFF {}StructuralEntity <|-- EnumValueEntity <|-- InheritanceEntity <|-- ImplementationScopingEntity <|-- NamespaceVariable <|-- implicitVariableMethod <|-- ParametricMethodScopingEntity <|-- ScriptEntityEntity <|-- ReferenceScriptEntity <|-- ModuleContainerEntity <|-- TypeStructuralEntity <|-- VariableNamedEntity <|-- StructuralEntityNamedEntity <|-- ContainerEntityType <|-- EnumNamedEntity <|-- FileEntity <|-- SourceAnchorType <|-- ParameterTypeContainerEntity <|-- BehaviouralEntitySourceAnchor <|-- IndexedFileAnchorClass <|-- ParametricClassArrowFunction <|-- ParametricArrowFunctionType <|-- InterfaceEntity <|-- SourceLanguageEntity <|-- InvocationType <|-- PrimitiveTypeEntity <|-- AccessNamedEntity <|-- DecoratorEntity <|-- SourcedEntityNamedEntity <|-- FolderBehaviouralEntity <|-- FunctionType <|-- ClassSourcedEntity <|-- NamedEntityInterface <|-- ParametricInterfaceEntity <|-- ImportClauseNamedEntity <|-- AliasMethod <|-- AccessorSourceAnchor <|-- SourceTextAnchorEntity <|-- ConcretizationBehaviouralEntity <|-- MethodEntity <|-- ParameterConcretizationStructuralEntity <|-- ParameterBehaviouralEntity <|-- ArrowFunctionSourcedEntity <|-- CommentStructuralEntity <|-- PropertyFunction <|-- ParametricFunctionSourcedEntity <|-- JSDocContainerEntity <|-- ScopingEntityTEntityCreator <|.. FamixTypeScriptModelTWithInterfaces <|.. ContainerEntityTClassMetrics <|.. ClassDecorator "decorators*" -- "decoratedEntity" NamedEntity@enduml