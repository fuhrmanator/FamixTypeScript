@startumlhide empty membersskinparam class {  BackgroundColor white  ArrowColor black  BorderColor darkGray}class TWithInterfaces <<(T,white)>> #CCFFFF {}class Concretization <<(C,white)>> #CCFFFF {}class Module <<(C,white)>> #CCFFFF {}class FamixTypeScriptModel <<(C,white)>> #CCFFFF {}class Implementation <<(C,white)>> #CCFFFF {}class Interface <<(C,white)>> #CCFFFF {}class ParameterType <<(C,white)>> #CCFFFF {}class TClassMetrics <<(T,white)>> #CCFFFF {}class IndexedFileAnchor <<(C,white)>> #CCFFFF {}class SourceTextAnchor <<(C,white)>> #CCFFFF {}class PrimitiveType <<(C,white)>> #CCFFFF {}class Access <<(C,white)>> #CCFFFF {}class StructuralEntity <<(C,white)>> #CCFFFF {}class NamedEntity <<(C,white)>> #CCFFFF {}class Parameter <<(C,white)>> #CCFFFF {}class implicitVariable <<(C,white)>> #CCFFFF {}class Method <<(C,white)>> #CCFFFF {}class File <<(C,white)>> #CCFFFF {}class Entity <<(C,white)>> #CCFFFF {}class ScriptEntity <<(C,white)>> #CCFFFF {}class Reference <<(C,white)>> #CCFFFF {}class ContainerEntity <<(C,white)>> #CCFFFF {}class Enum <<(C,white)>> #CCFFFF {}class Accessor <<(C,white)>> #CCFFFF {}class ParametricArrowFunction <<(C,white)>> #CCFFFF {}class TEntityCreator <<(T,white)>> #CCFFFF {}class ParametricInterface <<(C,white)>> #CCFFFF {}class Type <<(C,white)>> #CCFFFF {}class Alias <<(C,white)>> #CCFFFF {}class ParametricClass <<(C,white)>> #CCFFFF {}class ParametricMethod <<(C,white)>> #CCFFFF {}class Decorator <<(C,white)>> #CCFFFF {  String expression}class ParameterConcretization <<(C,white)>> #CCFFFF {}class SourceAnchor <<(C,white)>> #CCFFFF {}class BehaviouralEntity <<(C,white)>> #CCFFFF {}class Variable <<(C,white)>> #CCFFFF {}class Folder <<(C,white)>> #CCFFFF {}class Property <<(C,white)>> #CCFFFF {  Boolean isDefinitelyAssigned  Boolean isOptional  Boolean readOnly  Boolean isJavaScriptPrivate}class Inheritance <<(C,white)>> #CCFFFF {}class Comment <<(C,white)>> #CCFFFF {  Boolean isJSDoc}class Class <<(C,white)>> #CCFFFF {}class SourceLanguage <<(C,white)>> #CCFFFF {}class ScopingEntity <<(C,white)>> #CCFFFF {}class ArrowFunction <<(C,white)>> #CCFFFF {}class JSDoc <<(C,white)>> #CCFFFF {}class EnumValue <<(C,white)>> #CCFFFF {}class SourcedEntity <<(C,white)>> #CCFFFF {}class Function <<(C,white)>> #CCFFFF {}class Invocation <<(C,white)>> #CCFFFF {}class ParametricFunction <<(C,white)>> #CCFFFF {}class ImportClause <<(C,white)>> #CCFFFF {}class Namespace <<(C,white)>> #CCFFFF {}Entity <|-- ConcretizationScriptEntity <|-- ModuleType <|-- InterfaceEntity <|-- ImplementationType <|-- ParameterTypeSourceAnchor <|-- IndexedFileAnchorSourceAnchor <|-- SourceTextAnchorType <|-- PrimitiveTypeEntity <|-- AccessNamedEntity <|-- StructuralEntitySourcedEntity <|-- NamedEntityStructuralEntity <|-- ParameterNamedEntity <|-- FileScopingEntity <|-- ScriptEntityVariable <|-- implicitVariableEntity <|-- ReferenceNamedEntity <|-- ContainerEntityType <|-- EnumBehaviouralEntity <|-- MethodMethod <|-- AccessorArrowFunction <|-- ParametricArrowFunctionInterface <|-- ParametricInterfaceNamedEntity <|-- AliasContainerEntity <|-- TypeClass <|-- ParametricClassMethod <|-- ParametricMethodEntity <|-- ParameterConcretizationNamedEntity <|-- DecoratorContainerEntity <|-- BehaviouralEntityEntity <|-- SourceAnchorStructuralEntity <|-- VariableNamedEntity <|-- FolderStructuralEntity <|-- PropertyEntity <|-- InheritanceSourcedEntity <|-- CommentType <|-- ClassEntity <|-- SourceLanguageContainerEntity <|-- ScopingEntityBehaviouralEntity <|-- ArrowFunctionSourcedEntity <|-- JSDocBehaviouralEntity <|-- FunctionStructuralEntity <|-- EnumValueEntity <|-- SourcedEntityFunction <|-- ParametricFunctionEntity <|-- InvocationEntity <|-- ImportClauseScopingEntity <|-- NamespaceTEntityCreator <|.. FamixTypeScriptModelTWithInterfaces <|.. ContainerEntityTClassMetrics <|.. ClassNamedEntity "decoratedEntity" -- "decorators*" Decorator@enduml